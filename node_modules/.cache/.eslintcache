[{"/Users/kingwang/myProject/myTodoList/src/index.js":"1","/Users/kingwang/myProject/myTodoList/src/App.jsx":"2","/Users/kingwang/myProject/myTodoList/src/components/List/index.jsx":"3","/Users/kingwang/myProject/myTodoList/src/components/Header/index.jsx":"4","/Users/kingwang/myProject/myTodoList/src/components/Footer/index.jsx":"5","/Users/kingwang/myProject/myTodoList/src/components/Item/index.jsx":"6"},{"size":199,"mtime":1642566446818,"results":"7","hashOfConfig":"8"},{"size":1613,"mtime":1642567468394,"results":"9","hashOfConfig":"8"},{"size":1011,"mtime":1642570522303,"results":"10","hashOfConfig":"8"},{"size":781,"mtime":1642569185424,"results":"11","hashOfConfig":"8"},{"size":819,"mtime":1642563689568,"results":"12","hashOfConfig":"8"},{"size":984,"mtime":1642567849292,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p4zj39",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kingwang/myProject/myTodoList/src/index.js",[],"/Users/kingwang/myProject/myTodoList/src/App.jsx",[],"/Users/kingwang/myProject/myTodoList/src/components/List/index.jsx",["27"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Item from \"../Item\";\r\nimport \"./index.css\";\r\nimport { SmileOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nexport default class List extends Component {\r\n  static propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    updateTodo: PropTypes.func.isRequired,\r\n    deleteTodo: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { todos, updateTodo, deleteTodo } = this.props;\r\n\tlet show = false;\r\n\tif(todos.length === 0){\r\n\t\tshow = true;\r\n\t}\r\n    return (\r\n      <div>\r\n        <ul className=\"todo-main\">\r\n          {todos.map((todo) => {\r\n            return (\r\n              <Item\r\n                key={todo.id}\r\n                {...todo}\r\n                updateTodo={updateTodo}\r\n                deleteTodo={deleteTodo}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n\t\t{show? <div><a>Well Done! You don't have any task so far.</a><br/> <SmileOutlined/></div>: \" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/Users/kingwang/myProject/myTodoList/src/components/Header/index.jsx",[],"/Users/kingwang/myProject/myTodoList/src/components/Footer/index.jsx",[],"/Users/kingwang/myProject/myTodoList/src/components/Item/index.jsx",[],{"ruleId":"28","severity":1,"message":"29","line":37,"column":15,"nodeType":"30","endLine":37,"endColumn":18},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]